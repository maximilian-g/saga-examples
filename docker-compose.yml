services:
  mysql:
    image: library/mysql:latest
    volumes:
      - db:/var/lib/mysql
      - ./database:/tmp/database
    command: mysqld --init-file="/tmp/database/init_db.sql" --default-authentication-plugin=mysql_native_password
    environment:
      # Password for root access
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - mysql
    restart: unless-stopped
    ports:
      - "3307:3306"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.9.11-management-alpine
    networks:
      - spring
    ports:
      - "5672:5672"
      - "15672:15672"

  customer-service:
    image: n0n4m3q/microservices-customer-service:0.0.1-SNAPSHOT
    ports:
      - "8180:8180"
    restart: on-failure
    depends_on:
      - mysql
      - rabbitmq
    networks:
      - mysql
      - spring
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  kitchen-service:
    image: n0n4m3q/microservices-kitchen-service:0.0.1-SNAPSHOT
    ports:
      - "8280:8280"
    restart: on-failure
    depends_on:
      - mysql
      - rabbitmq
    networks:
      - mysql
      - spring
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  authorization-service:
    image: n0n4m3q/microservices-authorization-service:0.0.1-SNAPSHOT
    ports:
      - "8380:8380"
    restart: on-failure
    depends_on:
      - rabbitmq
    networks:
      - spring
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  order-service:
    image: n0n4m3q/microservices-order-service:0.0.1-SNAPSHOT
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      - mysql
      - rabbitmq
    networks:
      - mysql
      - spring
    environment:
      - SPRING_PROFILES_ACTIVE=docker

networks:
  mysql:
    driver: bridge
  spring:
    driver: bridge
volumes:
  db: